@model ComicBookReader.Models.Chapter
@{
    ViewData["Title"] = "Читать главу";
}

<!DOCTYPE html>

<html>
    <head>
        <title>ComicBookReader</title>
        <style>
            .img-page {
                width: 500px;
                display: block;
                margin-right: auto;
                margin-left: auto;
            }

            * {
              box-sizing: border-box;
            }

            .slide-img {
                display: flex;
                justify-content: center;
                align-items: center;
            }

            /* Расположите контейнер изображения (необходимо расположить стрелки влево и вправо) */
            .containerr {
              position: relative;
              display: block;
              margin-left: 0px;
              margin-right: 0px;
            }

            /* Скрыть изображения по умолчанию */
            .mySlides {
              display: none;
            }

            /* Добавить указатель при наведении на миниатюры изображений */
            .cursor {
              cursor: pointer;
            }

            /* Вперед и предыдущие кнопки */
            .prev,
            .next {
              cursor: pointer;
              width: auto;
              padding-top: 100px;
              padding-bottom: 100px;
              padding-left: 40px;
              padding-right: 40px;
              color: #555;
              font-weight: bold;
              font-size: 20px;
              border-radius: 0 3px 3px 0;
              user-select: none;
              -webkit-user-select: none;
            }

            /* Позиция "next кнопка" на право */
            .next {
              right: 0;
              border-radius: 3px 0 0 3px;
            }

            /* При наведении курсора добавьте черный цвет фона с небольшим количеством прозрачного */
            .prev:hover,
            .next:hover {
              background-color: #ccc;
              color: #fff;
            }

            /* Номера текст (1/3 и т.д.) */
            .numbertext {
              text-align: center;
              color: #000;
              margin-top: 20px;
            }


            .slider {
              margin-top: 20px;
              -webkit-appearance: none;
              width: 250px;
              height: 3px;
              margin-left: 25px;
              border-radius: 5px;  
              background: #fff;
              outline: none;
              opacity: 0.7;
              -webkit-transition: .2s;
              transition: opacity .2s;
            }

            .slider::-webkit-slider-thumb {
              -webkit-appearance: none;
              appearance: none;
              width: 25px;
              height: 25px;
              border-radius: 50%; 
              background: #fff;
              cursor: pointer;
            }

            .slider-page {
              margin-top: 20px;
              -webkit-appearance: none;
              width: 500px;
              height: 5px;
              border-radius: 5px;  
              background: #555;
              outline: none;
              opacity: 0.7;
              -webkit-transition: .2s;
              transition: opacity .2s;
              margin-bottom: 20px;
            }

            .slider-page::-webkit-slider-thumb {
              -webkit-appearance: none;
              appearance: none;
              width: 25px;
              height: 25px;
              border-radius: 50%; 
              background: #555;
              cursor: pointer;
            }

            .page-content {
                position: relative;
            }

             .settings {
                display: none;
                position: absolute;
                top: 20px;
                left: 20px;
                float: right;
                height: 400px;
                width: 300px;
                background-color: #aaa;
                border-radius: 20px;
            }

            .settings h5 {
                color: #fff;
                text-align: center;
            }

            .slidecontainer {
                margin-top: 20px;
            }

            .settings-icon {
                cursor: pointer;
                margin-top: 20px;
                margin-left: 20px;
            }

            .settings-icon img {
                width: 50px;
                margin-top: 5px;
            }

            .nav-reader {
                height: 60px;
                width: 100%;
                background-color: #aaa;
                display: flex;
            }

            .nav-reader a {
                color: #fff;
            }

            .nav-reader a:hover {
                color: #ccc;
            }
        </style>
    </head>
    <body>
        <div class="nav-reader">
            <a class="settings-icon" onclick="showSettings()"><img src="~/img/settings_icon.png" /></a>
            <div style="display: flex; justify-content: center; margin-left: auto; margin-right: auto;">
                @{int prevCh = @Model.ChapterId - 1;}
                @{int nextCh = @Model.ChapterId + 1;}
                @if (@prevCh >= @ViewBag.FirstChapter)
                {
                    <a href="~/Home/ComicChapter/@prevCh">Предыдущая глава</a>
                }
                <p>@Model.ChapterName</p>
                @if (@nextCh <= @ViewBag.ChapterCount)
                {
                    <a href="~/Home/ComicChapter/@nextCh">Следующая глава</a>
                }
            </div>
           
            
        </div>
        
        <section class="page-content">
            <div class="slide-img">
            <!-- Вперед и назад кнопки -->
          <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
            <!-- Контейнер для галереи изображений -->
        <div class="containerr">
            
          <!-- Полноразмерные изображения с числовым текстом -->
          @{int i;}
          @for (i = 0; i < @Model.ComicPages.Count; i++)
            {
              <div class="mySlides">
                  <img class="img-page" src="@Model.ComicPages.ElementAt(i).PageImage">
                  <div class="numbertext"><p>@Model.ComicPages.ElementAt(i).PageNumber / @Model.ComicPages.Count</p></div>
              </div>
              
            }
            <div class="slidecontainer">
              <input  type="range" min="1" max="@Model.ComicPages.Count" value="1" class="slider-page" id="myRangePage">
            </div>

            <form name="pageForm">
                Перейти на страницу
                <input name="enter" class="enter-page" type="text" style="width: 50px; border-radius: 10px;" />
                <input name="submit" onclick="Complete();" class="submit-page" type="button" value="ok"/>
            </form>
          </div>

          <a class="next" onclick="plusSlides(1)">&#10095;</a>
        </div>
        
        <div class="settings">
            <div class="slidecontainer">
                <h5>Размер изображения</h5>
              <input type="range" min="400" max="1200" value="500" class="slider" id="myRange">
            </div>
        </div>
        </section>
        
    </body>
</html>
<script>
    var slideIndex = 1;
    showSlides(slideIndex);

    var sliderPage = document.getElementById("myRangePage");

    var cont = document.getElementsByClassName("containerr")[0];
    document.addEventListener("keydown", function (event) {
        if (event.keyCode == 39) {
            console.log("ar");
            plusSlides(1);
        }
        else if (event.keyCode == 37) {
            console.log("al");
            plusSlides(-1);
        }
    });
    
    // Вперед/назад элементы управления
    function plusSlides(n) {
      showSlides(slideIndex += n);
      sliderPage.value = slideIndex;
    }

    // Элементы управления миниатюрами изображений
    function currentSlide(n) {
      showSlides(slideIndex = n);
    }

    function showSlides(n) {
      var i;
      var slides = document.getElementsByClassName("mySlides");
      if (n > slides.length) {slideIndex = 1}
      if (n < 1) {slideIndex = slides.length}
      for (i = 0; i < slides.length; i++) {
        slides[i].style.display = "none";
      }
      slides[slideIndex-1].style.display = "block";
    }

    function Complete() {
        var pageNum = document.getElementsByClassName("enter-page")[0].value;
        currentSlide(Number(pageNum));
        sliderPage.value = slideIndex;
    }

    sliderPage.addEventListener("mouseup", function() {
        currentSlide(Number(this.value));
    });
    
    
</script>

<script>
    var slider = document.getElementById("myRange");
    var sliderPage = document.getElementById("myRangePage");
    var pages = document.getElementsByClassName("img-page");
    pages.innerHTML = slider.value; // Отображение значения ползунка по умолчанию
    
    slider.addEventListener("mouseup", function() {
        sliderPage.style.width = this.value + "px";
        for (i = 0; i < pages.length; i++) {
            pages[i].style.width = this.value + "px";
    }});
</script>

<script>
    var settingsIcon = document.getElementsByClassName("settings-icon")[0];
    var settings = document.getElementsByClassName("settings")[0];

    function showSettings() {
        if (settings.style.display == 'none') settings.style.display = 'block';
        else settings.style.display = 'none';
    }
</script>
