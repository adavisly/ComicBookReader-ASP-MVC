ОГЛАВЛЕНИЕ

ВВЕДЕНИЕ	3
ЗАДАНИЕ	3
ЛИСТ НОРМОКОНТРОЛЕРА	4
1.	РАЗРАБОТКА ПРОЕКТА ВЕБ-ПРИЛОЖЕНИЯ	6
1.1.    Исследование предметной области	6
1.2.    Функциональные требования	6
1.3.    Нефункциональные требования	7
1.4.    Существующие аналоги системы	7
1.5.    Mind-карта системы	8
1.6.    Макеты системы	10
1.7.    Логическое проектирование базы данных	16
2.	РАЗРАБОТКА ВЕБ-ПРИЛОЖЕНИЯ	18
2.1.    Инструменты разработки	18
ЗАКЛЮЧЕНИЕ	29
СПИСОК ЛИТЕРАТУРЫ	31


ВВЕДЕНИЕ

В последнее время комиксы становятся все популярнее в мире, а люди все чаще используют веб-приложения для их чтения. Также очень популярны комиксы, выходящие на иностранных языках, однако перевод произведений на родной язык выходит через некоторое время. Чтобы людям не приходи-лось ждать перевод, было создано веб-приложение, позволяющее читать ко-микс и распознавать текст с изображения, что позволит в дальнейшем переве-сти его на родной язык с помощью машинного перевода.
Цель данной работы – разработать веб-приложение для чтения комиксов и реализовать функцию распознавания текста с изображений.
Для достижения этой цели необходимо выполнить следующий перечень за-дач:
1.	Анализ предметной области;
2.	Определение функциональных и нефункциональных требований к си-стеме;
3.	Построение макетов системы;
4.	Создание базы данных;
5.	Разработка клиентской и серверной частей веб-приложения.

1.	РАЗРАБОТКА ПРОЕКТА ВЕБ-ПРИЛОЖЕНИЯ

1.1.    Исследование предметной области

Предметной областью веб-приложения для чтения комиксов является хранилище графических романов.
Для людей, увлекающихся комиксами, необходимо приложение, отоб-ражающее их список, позволяющее их читать и просматривать о них инфор-мацию. К информации о комиксах относятся их название, жанры, авторы, гла-вы, обложка, описание, год выхода, язык текста и сами изображения страниц. Также пользователь сможет добавлять комикс в один из списков для чтения: «читаю», «прочитано» или «хочу прочитать», добавлять в категорию люби-мых, оставлять отзыв и ставить оценку от одного до пяти. 
Для удобства пользователей необходимо предусмотреть поиск по названию, а также фильтрацию комиксов по жанрам, языкам и сортировку по дате выхода, названию или средней оценке читателей.

1.2.    Функциональные требования

Для данной информационной системы были выделены следующие функциональные требования:
•	Аутентификация и авторизация пользователя;
•	Чтение комиксов;
•	Возможность оставлять отзывы;
•	Добавление в список для чтения;
•	Распознавание текста с изображений.
При чтении комикса пользователь сможет менять размер изображения с помощью ползунка, выбрать режим чтения: горизонтальный либо вертикаль-ный. При горизонтальном режиме чтения будет отображаться одна страница комикса, а пользователь сможет переключаться между страницами с помо-щью кнопок со стрелками либо с помощью клавиатуры.
Немаловажной является функция распознавания текста. С ее помощью пользователь сможет выделить конкретный участок изображения, программа распознает текст, находящийся на выделенном участке и выведет его на экран. Также отдельно будет выводиться лишь выделенный фрагмент изображения.

1.3.    Нефункциональные требования

В данном проекте имеются следующие нефункциональные требования:
•	дружественный интерфейс;
•	привлекательный дизайн, соответствующий ожиданиям целевой ауди-тории;
•	легкость в навигации;
•	легкость в использовании;
•	ограничение между пользовательским интерфейсом и серверной части. 

1.4.    Существующие аналоги системы

Существует большое количество аналогов приложений для чтения ко-миксов, в которых реализовано множество полезных функций. К примеру, в таком приложении, как MangaLib, есть возможность оставлять комментарии под каждой страницей, как продемонстрировано на рисунке 1.1. 

 
Рисунок 1.1 – Обзор приложения MangaLib 
А в приложении WebToon, как показано на рисунке 1.2, пользователь может сам загружать комиксы на сервер. 
 
Рисунок 1.2 – Обзор приложения WebToon
Однако ни в одном из них нет функции распознавания текста с изобра-жения, которая даст возможность переводить текст с иностранного языка на родной. Поэтому я считаю выбранную тему проекта актуальной на сегодняш-ний день.

1.5.    Mind-карта системы

На рисунке 1.3 представлена mind-карта разрабатываемой системы. Сайт состоит из шести страниц, каждая из которых имеет навигационный блок и основной контент. На главной странице отображается список комиксов, ко-торый можно отфильтровать по жанрам и языкам, а также отсортировать по дате выхода, названию и средней оценке. На странице «Вход» или «Регистра-ция» располагаются формы –  для входа в систему и для регистрации новых пользователей соответственно. На странице «Профиль» пользователь может просмотреть личные данные и изменить их. Также там отображаются комик-сы, добавленные в один списков для чтения – «Читаю», «Прочитано», «Хочу прочитать», «Любимое», а также отображаются все отзывы данного пользо-вателя. На странице «Комикс» имеется информация о комиксе, главы и отзы-вы. На странице «Чтение» расположены навигация по комиксу, настройки чи-талки и сами страницы комикса. Также имеется страница «Распознавание» для распознавания текста.  
 
Рисунок 1.3 – Mind-карта системы
1.6.    Макеты системы

С помощью приложения “Photoshop” были построены макеты системы.
На каждой странице сайта имеется навигационная панель и основной контент. В навигационную панель входят логотип, название сайта, строка по-иска и кнопка для перехода на страницу пользователя. При нажатии на лого-тип открывается главная страница.
На главной странице, как показано на рисунке 1.4, отображается список комиксов в порядке дате выхода по убыванию. Также имеется строка поиска с фильтрами по жанрам, языку и сортировка по дате выхода, названию и оценке пользователей. 
 
Рисунок 1.4 – Макет главной страницы
На странице комикса в соответствии с рисунком 1.5 располагается такая информация о комиксе, как обложка, название, год выхода, список авторов и жанров, описание. Справа располагается информация о средней оценке поль-зователей и общее количество оценок. Там же находятся кнопки «Добавить в любимые» и «Оставить отзыв». При нажатии на последнюю, как показано на рисунке 1.6, открывается модальное окно с формой для отправки отзыва. Следом идет форма для добавления в один из списков: «Хочу прочитать», «Читаю» и «Прочитано». 
Ниже располагается список глав со ссылкой на конкретную главу, а нажатии на кнопку «Отзывы» отображаются все отзывы, оставленные пользо-вателями на данный комикс.
 
Рисунок 1.5 – Макет страницы комикса
 
Рисунок 1.6 – Модальное окно с формой для отправки отзыва
Страница чтения комикса открывается при нажатии на ссылку с опреде-ленной главой. Как показано на рисунке 1.4, она имеет дополнительную нави-гационную панель для перехода на другую главу или другую страницу либо для возвращения на страницу комикса. Также имеется кнопка настроек, при нажатии на которые открывается окно с настройками размера изображения и режима чтения.
 
Рисунок 1.7 – Макет страницы чтения комикса
Под каждой страницей комикса имеется кнопка «Распознать», при нажатии на которую открывается страница с распознаванием. В соответствии с рисунком 1.8 пользователь имеет возможность выделить конкретный уча-сток изображения, тогда в окне появится распознанный текст, а также выве-дется окошко с выделенным фрагментом.
 
Рисунок 1.8 – Макет страницы распознавания
На странице входа, согласно рисунку 1.9, запрашивается e-mail и пароль пользователя. При нажатии на кнопку «Войти» происходит переход на стра-ницу профиля пользователя. А при нажатии на кнопку «Зарегистрироваться» открывается страница регистрации.
 
Рисунок 1.9 – Макет страницы «Вход»
На странице регистрации, как показано на рисунке 1.10, запрашивается имя, фамилия, e-mail, пароль и подтверждение пароля. При отсутствии запол-нения обязательных полей будет выводиться ошибка с просьбой заполнить данное поле. При нажатии на кнопку «Зарегистрироваться» происходит реги-страция пользователя в системе и переход на страницу его профиля. А при нажатии на кнопку «Войти» откроется страница входа в систему.
 
Рисунок 1.10 – Макет страницы «Регистрация»
На странице профиля в соответствии с рисунком 1.11 находится блок с личными данными пользователя, которые можно изменить при нажатии на кнопку «Изменить информацию». Как показано на рисунке 1.12, откроется модальное окно для изменения информации. В нем можно добавить фото профиля, изменить имя, фамилию, e-mail и обновить пароль. Для последнего потребуется ввести предыдущий пароль для подтверждения личности поль-зователя. Также на странице отображаются комиксы, добавленные в один из списков для чтения и все оставленные им отзывы. 
 
Рисунок 1.11 – Макет страницы «Профиль»
 
Рисунок 1.12 – Макет модального окна для изменения информации


1.7.    Логическое проектирование базы данных

Как показано на рисунке 1.13, была спроектирована логическая модель базы данных. Всего имеется семь сущностей:
•	Комиксы
•	Жанры
•	Авторы
•	Главы
•	Страницы
•	Пользователи
•	Комикс_Пользователь

 
Рисунок 1.13 – ER-модель базы данных
Сущность «Комиксы» содержит в себе информацию о комиксах и имеет такие атрибуты, как код комикса, название, обложка, описание, год выхода и язык текста.
Сущность «Жанры» содержит в себе информацию о жанрах и имеет та-кие атрибуты, как код жанра и его название. Она связана с сущностью «Ко-миксы» отношением «Многие ко многим».
Сущность «Авторы» содержит в себе информацию об авторах и имеет такие атрибуты, как код автора, его имя, дата рождения и фото. Она связана с сущностью «Комиксы» отношением «Многие ко многим».
Сущность «Главы» содержит в себе информацию о главах и имеет такие атрибуты, как код главы и ее название. Она связана с сущностью «Комиксы» отношением «Один ко многим».
Сущность «Страницы» содержит в себе информацию о страницах и имеет такие атрибуты, как код страницы, ее номер и изображение. Она связана с сущностью «Главы» отношением «Один ко многим».
Сущность «Пользователи» содержит в себе информацию о пользовате-лях и имеет такие атрибуты, как код пользователя, его имя, фамилия, e-mail, пароль и фото профиля.
Сущность «Комикс_Пользователь» является промежуточной, содержит в себе информацию о конкретном пользователе и комиксе и имеет такие атри-буты, как код комикса, код пользователя, является ли комикс любимым, ста-тус чтения, отзыв, оценка, последняя страница и последняя глава. Она связана с сущностями «Комиксы» и «Пользователи» отношением «Один ко многим».






 
2.	РАЗРАБОТКА ВЕБ-ПРИЛОЖЕНИЯ

2.1.    Инструменты разработки
	
Веб-приложение было разработано на платформе ASP.NET Core MVC. 
Паттерн MVC подразумевает деление системы на три компонента:
•	Модель (model): показыва-ет применяемые в дополнении сведения, а также логи-ку, что сопряжена напрямую вместе с сведениями, к примеру, логику валида-ции сведений. Равно как принцип, предметы модификаций сохраняются в основе сведений. В MVC модифика-ции презентованы двумя главными видами: модификации взглядов, какие применяются понятиями с целью отражения, а также передачи сведений, а так-же модификации домена, какие представляют логику управле-ния сведениями. Форма способен включать сведения, сохранять логику управления данными сведениями. В таком случае ведь период форма никак не обязана включать логику взаимодействия вместе с пользователем а так-же никак не обязана устанавливать система обрабатывания запроса. Помимо этого, форма никак не обязана включать логику отражения сведений в понятии.
•	Представление (view): соответствует визуалу или пользователь-скому интерфейсу, зачастую это html-страница, посредством которой пользо-ватель пользуется системой. Кроме того, представление имеет логику, связан-ную с отражением данных. Однако в представление нельзя включать обра-ботку запроса или изменение данных.
•	Контроллер (controller): предполагает главный компонент MVC, который гарантирует связь между пользователем и сервером, то есть пред-ставлением и моделью. Он включает логику обработки запроса пользователя. Контроллер принимает на вход данные пользователя и занимается их обра-боткой. И в зависимости от ее результатов посылает пользователю конкрет-ный ответ.
Отношения между компонентами паттерна можно описать следующей схемой:
 
Рисунок 2.1 – Схема паттерна MVC
	В качестве системы управления базами данных был использован MS SQL Server, а в качестве ORM (объектно-реляционного отображения) – Entity Framework Core.
При разработке клиентской части веб-приложения использовались сле-дующие инструменты:
•	HTML (HyperText Markup Language) – стандартизированный язык разметки документов в интернете. Язык HTML интерпретируется браузерами; полученный в результате интерпретации форматированный текст отображает-ся на экране монитора компьютера или мобильного устройства. HTML состо-ит из ряда элементов, которые используются, чтобы вкладывать или оборачи-вать различные части контента, чтобы заставить контент отображаться или действовать определённым образом.
•	CSS (Cascading Style Sheets) – формальный язык описания внеш-него вида документа (веб-страницы), написанного с использованием языка разметки. В отличие от HTML, который служит для определения структуры и семантики содержимого, CSS отвечает за его внешний вид и отображение. К примеру, с помощью CSS можно изменять шрифт, цвет, размер, межстроч-ный интервал, разделять содержимое на колонки, а также добавлять анима-цию и другие декоративные элементы.
•	JavaScript – это язык программирования, который даёт возмож-ность реализовывать сложное поведение веб-страницы. Веб-страница может не только отображать статическое содержимое, но и своевременно показы-вать обновление контента, выводить интерактивные карты, 2D/3D анимацию, прокручивать видео и т.д.
Для распознавания текста с изображений был использован движок OCR Tesseractи уже обученные модели, а также библиотека для обработки изобра-жений EmguCV.
 
ЗАКЛЮЧЕНИЕ

В результате выполнения выпускной квалификационной работы было разработано веб-приложение для чтения комиксов с возможностью распозна-вания текста с изображения. Были реализованы все задачи проводимого ис-следования. Была проанализирована предметная область, определены функ-циональные и нефункциональные требования к системе, построена карта ин-формационной системы, созданы макеты приложения; разработаны и пред-ставлены клиентская и серверная части информационной системы. Также был разработан привлекательный и эффективный дизайн, соответствующий ожи-даниям целевой аудитории. В процессе были использованы современные ме-тоды разработки сайта, а также инструменты последних версий, такие как ASP.NET Core 5, MS SQL Server, EntityFramework Core, HTML5, CSS3, Ja-vaScript, OCR Tesseract и EmguCV. Полученное веб-приложение позволяет читать комиксы. Также сайт предполагает возможность регистрации пользо-вателей, внесения изменений в личные данные, просмотр информации о ко-миксе, их оценивание и добавление в список для чтения. Система отвечает ис-ходным требованиям по оперативности, достоверности, надежности и адек-ватности. 
Результаты исследования могут быть применены для облегчения полу-чения пользователями актуальной информации о фильмах.
В процессе исследования были получены знания и сформированы навы-ки практической работы, связанной с разработкой и реализацией информаци-онных систем.


 
СПИСОК ЛИТЕРАТУРЫ

1.	
